version: "3.8"
services:
    
  redis:
    build: .
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6380:6380"
    command: redis-server --port 6380 --requirepass ${REDIS_PASSWORD} --
    #command: redis-server --port 8000 --daemonize no
    volumes:
      # - $PWD/redis-data:/redis
      - $PWD/redis.conf:/redis.conf

    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_URL=redis://redis:6380/1
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6380
    networks:
      backend:
        ipv4_address: 172.18.0.10

  app:
    build: .
    container_name: app
    restart: always
    ports:
      - "8000:8000"
    command: |
      python3 ./app/api/main.py
      sqlite3 ./app/db/purchases.db
    volumes:
      - ${SQLITE_DB_PATH}:/app/db/database.db
    environment:
      - APP=/app/api/main.py
      - SQLITE_DB_PATH=${SQLITE_DB_PATH}
    depends_on:
      - redis
    networks:
      backend:
        ipv4_address: 172.18.0.20
    links:
     - redis

volumes:
  app:
  redis:

networks:
  backend:
    name: backend
    driver: bridge
    external: false
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16
          # gateway: 0.0.0.254
    #       ip_range: 0.0.0.0/24
    #       aux_addresses:
    #         host1: 0.0.0.5
    #         host2: 0.0.0.6
    #         host3: 0.0.0.7